{
    "schemes": [
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is the EnMasse API specification.",
        "title": "EnMasse REST API",
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about EnMasse",
        "url": "http://enmasse.io"
    },
    "tags": [
        {
            "description": "Operate on AddressSpaces",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "addressspaces"
        },
        {
            "description": "Operating on Addresses.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "addresses"
        },
        {
            "description": "Operating on MessagingUsers.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "messagingusers"
        },
        {
            "description": "Operating on AddressSpacePlans.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "addressspaceplans"
        },
        {
            "description": "Operating on AddressPlans.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "addressplans"
        },
        {
            "description": "Operating on BrokeredInfraConfigs.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "brokeredinfraconfigs"
        },
        {
            "description": "Operating on StandardInfraConfigs.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            },
            "name": "standardinfraconfigs"
        }
    ],
    "definitions": {
        "JsonPatchRequest": {
            "properties": {
                "document": {
                    "type": "object"
                },
                "patch": {
                    "items": {
                        "$ref": "#/definitions/Patch"
                    },
                    "type": "array"
                }
            },
            "required": [
                "document",
                "patch"
            ]
        },
        "ObjectMeta": {
            "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "Patch": {
            "properties": {
                "from": {
                    "description": "Required for operations copy, replace",
                    "type": "string"
                },
                "op": {
                    "enum": [
                        "add",
                        "remove",
                        "replace",
                        "move",
                        "copy",
                        "test"
                    ],
                    "type": "string"
                },
                "path": {
                    "description": "Slash separated format",
                    "type": "string"
                },
                "value": {
                    "description": "Required for operations add, replace, test",
                    "type": "string"
                }
            },
            "required": [
                "op",
                "path"
            ]
        },
        "Status": {
            "description": "Status is a return value for calls that do not return other objects.",
            "properties": {
                "code": {
                    "description": "Suggested HTTP return code for this status, 0 if not set.",
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfig": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "BrokeredInfraConfig"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpec"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigList": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfig"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "BrokeredInfraConfigList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpec": {
            "properties": {
                "admin": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecAdmin"
                },
                "broker": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecBroker"
                },
                "networkPolicy": {
                    "properties": {
                        "egress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            },
                            "type": "array"
                        },
                        "ingress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecAdmin": {
            "properties": {
                "podTemplate": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.InfraConfigPodSpec"
                },
                "resources": {
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecBroker": {
            "properties": {
                "addressFullPolicy": {
                    "enum": [
                        "PAGE",
                        "BLOCK",
                        "FAIL"
                    ],
                    "type": "string"
                },
                "podTemplate": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.InfraConfigPodSpec"
                },
                "resources": {
                    "properties": {
                        "memory": {
                            "type": "string"
                        },
                        "storage": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "storageClassName": {
                    "type": "string"
                },
                "updatePersistentVolumeClaim": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.InfraConfigPodSpec": {
            "properties": {
                "metadata": {
                    "properties": {
                        "labels": {
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "spec": {
                    "properties": {
                        "affinity": {
                            "type": "object"
                        },
                        "containers": {
                            "items": {
                                "properties": {
                                    "resources": {
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "priorityClassName": {
                            "type": "string"
                        },
                        "tolerations": {
                            "items": {
                                "type": "object"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfig": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "StandardInfraConfig"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpec"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigList": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfig"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "StandardInfraConfigList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpec": {
            "properties": {
                "admin": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecAdmin"
                },
                "broker": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecBroker"
                },
                "networkPolicy": {
                    "properties": {
                        "egress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            },
                            "type": "array"
                        },
                        "ingress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "router": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecRouter"
                },
                "version": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecAdmin": {
            "properties": {
                "podTemplate": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.InfraConfigPodSpec"
                },
                "resources": {
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecBroker": {
            "properties": {
                "addressFullPolicy": {
                    "enum": [
                        "PAGE",
                        "BLOCK",
                        "FAIL"
                    ],
                    "type": "string"
                },
                "connectorIdleTimeout": {
                    "type": "integer"
                },
                "connectorWorkerThreads": {
                    "type": "integer"
                },
                "podTemplate": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.InfraConfigPodSpec"
                },
                "resources": {
                    "properties": {
                        "memory": {
                            "type": "string"
                        },
                        "storage": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "storageClassName": {
                    "type": "string"
                },
                "updatePersistentVolumeClaim": {
                    "type": "boolean"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecRouter": {
            "properties": {
                "idleTimeout": {
                    "type": "integer"
                },
                "initialHandshakeTimeout": {
                    "type": "integer"
                },
                "linkCapacity": {
                    "type": "integer"
                },
                "minReplicas": {
                    "type": "integer"
                },
                "podTemplate": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.InfraConfigPodSpec"
                },
                "policy": {
                    "properties": {
                        "maxConnections": {
                            "type": "integer"
                        },
                        "maxConnectionsPerHost": {
                            "type": "integer"
                        },
                        "maxConnectionsPerUser": {
                            "type": "integer"
                        },
                        "maxReceiversPerConnection": {
                            "type": "integer"
                        },
                        "maxSendersPerConnection": {
                            "type": "integer"
                        },
                        "maxSessionsPerConnection": {
                            "type": "integer"
                        }
                    },
                    "type": "object"
                },
                "resources": {
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "workerThreads": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressPlan": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta2"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "AddressPlan"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressPlanSpec"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressPlanList": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta2"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressPlan"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "AddressPlanList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressPlanSpec": {
            "properties": {
                "addressType": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer"
                },
                "longDescription": {
                    "type": "string"
                },
                "partitions": {
                    "type": "integer"
                },
                "resources": {
                    "properties": {
                        "broker": {
                            "type": "number"
                        },
                        "router": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "shortDescription": {
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "addressType",
                "resources"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressSpacePlan": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta2"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "AddressSpacePlan"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlanSpec"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressSpacePlanList": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "admin.enmasse.io/v1beta2"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "AddressSpacePlanList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.admin.v1beta2.AddressSpacePlanSpec": {
            "properties": {
                "addressPlans": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "addressSpaceType": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer"
                },
                "infraConfigRef": {
                    "type": "string"
                },
                "longDescription": {
                    "type": "string"
                },
                "resourceLimits": {
                    "properties": {
                        "aggregate": {
                            "type": "number"
                        },
                        "broker": {
                            "type": "number"
                        },
                        "router": {
                            "type": "number"
                        }
                    },
                    "type": "object"
                },
                "shortDescription": {
                    "type": "string"
                }
            },
            "required": [
                "displayName",
                "resourceLimits",
                "addressSpaceType",
                "addressPlans",
                "infraConfigRef"
            ],
            "type": "object"
        },
        "io.enmasse.user.v1beta1.MessagingUser": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "user.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "MessagingUser"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.user.v1beta1.UserSpec"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.user.v1beta1.MessagingUserList": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "user.enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "MessagingUserList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.user.v1beta1.UserSpec": {
            "properties": {
                "authentication": {
                    "properties": {
                        "federatedUserid": {
                            "description": "User id of the user to federate when 'federated' type is specified.",
                            "type": "string"
                        },
                        "federatedUsername": {
                            "description": "User name of the user to federate when 'federated' type is specified.",
                            "type": "string"
                        },
                        "password": {
                            "description": "Base64 encoded value of password when 'password' type is specified.",
                            "type": "string"
                        },
                        "provider": {
                            "description": "Name of provider to use for federated identity when 'federated' type is specified.",
                            "type": "string"
                        },
                        "type": {
                            "enum": [
                                "password",
                                "serviceaccount"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "type"
                    ],
                    "type": "object"
                },
                "authorization": {
                    "items": {
                        "properties": {
                            "addresses": {
                                "items": {
                                    "description": "Addresses can be specified using exact values (that is, 'myqueue'), or glob patterns (that is, '*', or 'queue*').",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "operations": {
                                "items": {
                                    "enum": [
                                        "send",
                                        "receive",
                                        "view",
                                        "manage"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "operations"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "username": {
                    "type": "string"
                }
            },
            "required": [
                "username"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.Address": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "Address"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressStatus"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressList": {
            "properties": {
                "apiVersion": {
                    "default": "enmasse.io/v1beta1",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "AddressList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpace": {
            "properties": {
                "apiVersion": {
                    "enum": [
                        "enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "kind": {
                    "enum": [
                        "AddressSpace"
                    ],
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceStatus"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceList": {
            "properties": {
                "apiVersion": {
                    "default": "enmasse.io/v1beta1",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ],
                    "type": "string"
                },
                "items": {
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                    },
                    "type": "array"
                },
                "kind": {
                    "enum": [
                        "AddressSpaceList"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceSpec": {
            "properties": {
                "authenticationService": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "overrides": {
                            "properties": {
                                "host": {
                                    "type": "string"
                                },
                                "port": {
                                    "type": "integer"
                                },
                                "realm": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "connectors": {
                    "description": "List of connectors to create.",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceSpecConnector"
                    },
                    "type": "array"
                },
                "endpoints": {
                    "items": {
                        "properties": {
                            "cert": {
                                "properties": {
                                    "provider": {
                                        "type": "string"
                                    },
                                    "secretName": {
                                        "type": "string"
                                    },
                                    "tlsCert": {
                                        "type": "string"
                                    },
                                    "tlsKey": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "exports": {
                                "items": {
                                    "properties": {
                                        "kind": {
                                            "enum": [
                                                "ConfigMap",
                                                "Secret",
                                                "Service"
                                            ],
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "expose": {
                                "properties": {
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "loadBalancerPorts": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "loadBalancerSourceRanges": {
                                        "items": {
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "routeHost": {
                                        "type": "string"
                                    },
                                    "routeServicePort": {
                                        "type": "string"
                                    },
                                    "routeTlsTermination": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "enum": [
                                            "route",
                                            "loadbalancer"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "name": {
                                "type": "string"
                            },
                            "service": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "networkPolicy": {
                    "properties": {
                        "egress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            },
                            "type": "array"
                        },
                        "ingress": {
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "plan": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceType"
                }
            },
            "required": [
                "type",
                "plan"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceSpecConnector": {
            "properties": {
                "addresses": {
                    "description": "Addresses to make be accessible via this address space.",
                    "items": {
                        "properties": {
                            "name": {
                                "description": "Identifier of address pattern. Used to uniquely identify a pattern",
                                "type": "string"
                            },
                            "pattern": {
                                "description": "Pattern used to match addresses. The pattern will be prefixed by the connector name and a forward slash ('myconnector/'). A pattern consists of one or more tokens separated by a forward slash /. A token can be one of the following: a * character, a # character, or a sequence of characters that do not include /, *, or #. The * token matches any single token. The # token matches zero or more tokens. * has higher precedence than #, and exact match has the highest precedence.",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "pattern"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "credentials": {
                    "description": "Credentials used when connecting to endpoints. Either 'username' and 'password', or 'secret' must be defined.",
                    "properties": {
                        "password": {
                            "description": "Password to use for connector. Either 'value' or 'secret' must be specified.",
                            "properties": {
                                "value": {
                                    "type": "string"
                                },
                                "valueFromSecret": {
                                    "properties": {
                                        "key": {
                                            "default": "password",
                                            "description": "Key to use for looking up password entry.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of Secret containing password.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "username": {
                            "description": "Username to use for connector. Either 'value' or 'secret' must be specified.",
                            "properties": {
                                "value": {
                                    "type": "string"
                                },
                                "valueFromSecret": {
                                    "properties": {
                                        "key": {
                                            "default": "username",
                                            "description": "Key to use for looking up username entry.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of Secret containing username.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "endpointHosts": {
                    "description": "List of hosts that should be connected to. Must contain at least 1 entry.",
                    "items": {
                        "properties": {
                            "host": {
                                "description": "Host to connect to.",
                                "type": "string"
                            },
                            "port": {
                                "description": "Port to connect to.",
                                "type": "integer"
                            }
                        },
                        "required": [
                            "host",
                            "port"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the connector.",
                    "type": "string"
                },
                "tls": {
                    "description": "TLS settings for the connectors. If not specified, TLS will not be used.",
                    "properties": {
                        "caCert": {
                            "description": "CA certificate to be used by the connector. Either 'value' or 'secret'.",
                            "properties": {
                                "value": {
                                    "description": "PEM encoded value of CA certificate",
                                    "type": "string"
                                },
                                "valueFromSecret": {
                                    "description": "Secret containing CA certificate to be used by the connector.",
                                    "properties": {
                                        "key": {
                                            "default": "ca.crt",
                                            "description": "Key to use for looking up CA certificate entry.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of Secret containing CA certificate.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "clientCert": {
                            "description": "Client certificate to be used by the connector. Either 'value' or 'secret'.",
                            "properties": {
                                "value": {
                                    "description": "PEM encoded value of client certificate",
                                    "type": "string"
                                },
                                "valueFromSecret": {
                                    "description": "Secret containing client certificate to be used by the connector.",
                                    "properties": {
                                        "key": {
                                            "default": "ca.crt",
                                            "description": "Key to use for looking up client certificate entry.",
                                            "type": "string"
                                        },
                                        "name": {
                                            "description": "Name of Secret containing client certificate.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "name",
                "endpointHosts"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceStatus": {
            "properties": {
                "connectors": {
                    "description": "List of connectors with status.",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceStatusConnector"
                    },
                    "type": "array"
                },
                "endpointStatuses": {
                    "items": {
                        "properties": {
                            "cert": {
                                "type": "string"
                            },
                            "externalHost": {
                                "type": "string"
                            },
                            "externalPorts": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            "name": {
                                "type": "string"
                            },
                            "serviceHost": {
                                "type": "string"
                            },
                            "servicePorts": {
                                "items": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": "array"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "isReady": {
                    "type": "boolean"
                },
                "messages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceStatusConnector": {
            "properties": {
                "isReady": {
                    "description": "'true' if connector is operating as expected, 'false' if not.",
                    "type": "boolean"
                },
                "messages": {
                    "description": "Messages describing the connector state.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of connector.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpaceType": {
            "description": "AddressSpaceType is the type of address space (standard, brokered). Each type supports different types of addresses and semantics for those types.",
            "enum": [
                "standard",
                "brokered"
            ],
            "type": "string"
        },
        "io.enmasse.v1beta1.AddressSpec": {
            "properties": {
                "address": {
                    "type": "string"
                },
                "forwarders": {
                    "description": "List of forwarders to enable for this address.",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpecForwarder"
                    },
                    "type": "array"
                },
                "plan": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressType"
                }
            },
            "required": [
                "address",
                "type",
                "plan"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressSpecForwarder": {
            "properties": {
                "direction": {
                    "description": "Direction of forwarder. 'in' means pulling from 'remoteAddress' into this address. 'out' means pushing from this address to 'remoteAddress'.",
                    "enum": [
                        "in",
                        "out"
                    ],
                    "type": "string"
                },
                "name": {
                    "description": "Name of forwarder.",
                    "type": "string"
                },
                "remoteAddress": {
                    "description": "Remote address to send/receive messages to.",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "direction",
                "remoteAddress"
            ],
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressStatus": {
            "properties": {
                "forwarders": {
                    "description": "List of forwarders with status.",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressStatusForwarder"
                    },
                    "type": "array"
                },
                "isReady": {
                    "type": "boolean"
                },
                "messages": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "phase": {
                    "enum": [
                        "Pending",
                        "Configuring",
                        "Active",
                        "Failed",
                        "Terminating"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressStatusForwarder": {
            "properties": {
                "isReady": {
                    "description": "'true' if forwarder is operating as expected, 'false' if not.",
                    "type": "boolean"
                },
                "messages": {
                    "description": "Messages describing the forwarder state.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of forwarder.",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "io.enmasse.v1beta1.AddressType": {
            "description": "Type of address (queue, topic, ...). Each address type support different kinds of messaging semantics.",
            "enum": [
                "queue",
                "topic",
                "anycast",
                "multicast"
            ],
            "type": "string"
        },
        "io.k8s.api.networking.v1.IPBlock": {
            "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
            "properties": {
                "cidr": {
                    "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
                    "type": "string"
                },
                "except": {
                    "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "cidr"
            ]
        },
        "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
            "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
            "properties": {
                "ports": {
                    "description": "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                    },
                    "type": "array"
                },
                "to": {
                    "description": "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
            "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.",
            "properties": {
                "from": {
                    "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                    },
                    "type": "array"
                },
                "ports": {
                    "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                    },
                    "type": "array"
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyPeer": {
            "description": "NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed",
            "properties": {
                "ipBlock": {
                    "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock",
                    "description": "IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be."
                },
                "namespaceSelector": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
                    "description": "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector."
                },
                "podSelector": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector",
                    "description": "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace."
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyPort": {
            "description": "NetworkPolicyPort describes a port to allow traffic on",
            "properties": {
                "port": {
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString",
                    "description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers."
                },
                "protocol": {
                    "description": "The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
            "properties": {
                "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
                    },
                    "type": "array"
                },
                "matchLabels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object"
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
            "properties": {
                "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string",
                    "x-kubernetes-patch-merge-key": "key",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                },
                "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "key",
                "operator"
            ]
        },
        "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
            "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
            "format": "int-or-string",
            "type": "string"
        }
    },
    "paths": {
        "/apis/admin.enmasse.io/v1beta2/namespaces/{namespace}/addressspaceplans": {
            "get": {
                "description": "list objects of kind AddressSpacePlan",
                "operationId": "listAdminEnmasseV1beta2NamespacedAddresSpacePlan",
                "parameters": [
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlanList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta2",
                    "admin",
                    "addressspaceplan"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "create an AddressSpacePlan",
                "operationId": "createAdminEnmasseV1beta2NamespacedAddressSpacePlan",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta2",
                    "admin",
                    "addressspaceplan"
                ]
            }
        },
        "/apis/admin.enmasse.io/v1beta2/namespaces/{namespace}/addressspaceplans/{name}": {
            "delete": {
                "description": "delete an AddressSpacePlan",
                "operationId": "deleteAdminEnmasseV1beta2NamespacedAddressSpacePlan",
                "parameters": [
                    {
                        "description": "Name of AddressSpacePlan to delete.",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta2",
                    "admin",
                    "addressspaceplan"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "read the specified AddressSpacePlan",
                "operationId": "readAdminEnmasseV1beta2NamespacedAddressSpacePlan",
                "parameters": [
                    {
                        "description": "Name of AddressSpacePlan to read.",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta2",
                    "admin",
                    "addressspaceplan"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "put": {
                "description": "replace the specified AddressSpacePlan",
                "operationId": "replaceAdminEnmasseV1beta2NamespacedAddressSpacePlan",
                "parameters": [
                    {
                        "description": "Name of AddressSpacePlan to replace.",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta2.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta2",
                    "admin",
                    "addressspaceplan"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addresses": {
            "get": {
                "description": "list objects of kind Address",
                "operationId": "listEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "create an Address",
                "operationId": "createEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addresses/{name}": {
            "delete": {
                "description": "delete an Address",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "description": "Name of Address to delete",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "read the specified Address",
                "operationId": "readEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "description": "Name of Address to read",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json"
                ],
                "description": "patches (RFC6902) the specified Address",
                "operationId": "patchesEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "description": "Name of Address to replace",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatchRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            },
            "put": {
                "description": "replace the specified Address",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddress",
                "parameters": [
                    {
                        "description": "Name of Address to replace",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces": {
            "get": {
                "description": "list objects of kind AddressSpace",
                "operationId": "listEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "create an AddressSpace",
                "operationId": "createEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{addressSpace}/addresses": {
            "get": {
                "description": "list objects of kind Address in AddressSpace",
                "operationId": "listEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "parameters": [
                    {
                        "description": "Name of AddressSpace",
                        "in": "path",
                        "name": "addressSpace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "create Addresses in an AddressSpace",
                "operationId": "createEnmasseV1alpha1AddressSpaceAddresses",
                "parameters": [
                    {
                        "description": "Name of AddressSpace",
                        "in": "path",
                        "name": "addressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "AddressList object",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{addressSpace}/addresses/{address}": {
            "delete": {
                "description": "delete an Address in AddressSpace",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "parameters": [
                    {
                        "description": "Name of AddressSpace",
                        "in": "path",
                        "name": "addressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of Address",
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ]
            },
            "get": {
                "description": "read the specified Address in AddressSpace",
                "operationId": "readEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "parameters": [
                    {
                        "description": "Name of AddressSpace",
                        "in": "path",
                        "name": "addressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of Address",
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "put": {
                "consumes": [
                    "application/json"
                ],
                "description": "replace Address in an AddressSpace",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "parameters": [
                    {
                        "description": "Name of AddressSpace",
                        "in": "path",
                        "name": "addressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Name of address",
                        "in": "path",
                        "name": "address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Address object",
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ]
            }
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{name}": {
            "delete": {
                "description": "delete an AddressSpace",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "description": "Name of AddressSpace to delete",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "read the specified AddressSpace",
                "operationId": "readEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "description": "Name of AddressSpace to read",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json"
                ],
                "description": "patches (RFC6902) the specified AddressSpace",
                "operationId": "patchesEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "description": "Name of AddressSpace to replace",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatchRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            },
            "put": {
                "description": "replace the specified AddressSpace",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddressSpace",
                "parameters": [
                    {
                        "description": "Name of AddressSpace to replace",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ]
            }
        },
        "/apis/user.enmasse.io/v1beta1/namespaces/{namespace}/messagingusers": {
            "get": {
                "description": "list objects of kind MessagingUser",
                "operationId": "listAuthEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "in": "query",
                        "name": "labelSelector",
                        "type": "string",
                        "uniqueItems": true
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUserList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "post": {
                "consumes": [
                    "application/json"
                ],
                "description": "create a MessagingUser",
                "operationId": "createAuthEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            }
        },
        "/apis/user.enmasse.io/v1beta1/namespaces/{namespace}/messagingusers/{name}": {
            "delete": {
                "description": "delete a MessagingUser",
                "operationId": "deleteAuthEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "description": "Name of MessagingUser to delete. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            },
            "get": {
                "consumes": [
                    "application/json"
                ],
                "description": "read the specified MessagingUser",
                "operationId": "readAuthEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "description": "Name of MessagingUser to read. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            },
            "parameters": [
                {
                    "description": "object name and auth scope, such as for teams and projects",
                    "in": "path",
                    "name": "namespace",
                    "required": true,
                    "type": "string",
                    "uniqueItems": true
                }
            ],
            "patch": {
                "consumes": [
                    "application/json-patch+json"
                ],
                "description": "patches (RFC6902) the specified MessagingUser",
                "operationId": "patchesEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "description": "Name of MessagingUser to replace. Must include addressSpace and dot separator in the name (that is, 'myspace.user1'",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/JsonPatchRequest"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            },
            "put": {
                "description": "replace the specified MessagingUser",
                "operationId": "replaceAuthEnmasseV1alpha1NamespacedMessagingUser",
                "parameters": [
                    {
                        "description": "Name of MessagingUser to replace. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "in": "path",
                        "name": "name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ]
            }
        }
    }
}
