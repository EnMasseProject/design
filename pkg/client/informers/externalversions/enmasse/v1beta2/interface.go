/*
 * Copyright 2018-2019, EnMasse authors.
 * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).
 */

// Code generated by informer-gen. DO NOT EDIT.

package v1beta2

import (
	internalinterfaces "github.com/enmasseproject/enmasse/pkg/client/informers/externalversions/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// MessagingAddresses returns a MessagingAddressInformer.
	MessagingAddresses() MessagingAddressInformer
	// MessagingAddressPlans returns a MessagingAddressPlanInformer.
	MessagingAddressPlans() MessagingAddressPlanInformer
	// MessagingEndpoints returns a MessagingEndpointInformer.
	MessagingEndpoints() MessagingEndpointInformer
	// MessagingInfrastructures returns a MessagingInfrastructureInformer.
	MessagingInfrastructures() MessagingInfrastructureInformer
	// MessagingPlans returns a MessagingPlanInformer.
	MessagingPlans() MessagingPlanInformer
	// MessagingTenants returns a MessagingTenantInformer.
	MessagingTenants() MessagingTenantInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// MessagingAddresses returns a MessagingAddressInformer.
func (v *version) MessagingAddresses() MessagingAddressInformer {
	return &messagingAddressInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MessagingAddressPlans returns a MessagingAddressPlanInformer.
func (v *version) MessagingAddressPlans() MessagingAddressPlanInformer {
	return &messagingAddressPlanInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MessagingEndpoints returns a MessagingEndpointInformer.
func (v *version) MessagingEndpoints() MessagingEndpointInformer {
	return &messagingEndpointInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MessagingInfrastructures returns a MessagingInfrastructureInformer.
func (v *version) MessagingInfrastructures() MessagingInfrastructureInformer {
	return &messagingInfrastructureInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MessagingPlans returns a MessagingPlanInformer.
func (v *version) MessagingPlans() MessagingPlanInformer {
	return &messagingPlanInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}

// MessagingTenants returns a MessagingTenantInformer.
func (v *version) MessagingTenants() MessagingTenantInformer {
	return &messagingTenantInformer{factory: v.factory, namespace: v.namespace, tweakListOptions: v.tweakListOptions}
}
