/*
 * Copyright 2018-2019, EnMasse authors.
 * License: Apache License 2.0 (see the file LICENSE or http://apache.org/licenses/LICENSE-2.0.html).
 */

// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/enmasseproject/enmasse/pkg/apis/enmasse/v1beta2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// MessagingAddressPlanLister helps list MessagingAddressPlans.
type MessagingAddressPlanLister interface {
	// List lists all MessagingAddressPlans in the indexer.
	List(selector labels.Selector) (ret []*v1beta2.MessagingAddressPlan, err error)
	// MessagingAddressPlans returns an object that can list and get MessagingAddressPlans.
	MessagingAddressPlans(namespace string) MessagingAddressPlanNamespaceLister
	MessagingAddressPlanListerExpansion
}

// messagingAddressPlanLister implements the MessagingAddressPlanLister interface.
type messagingAddressPlanLister struct {
	indexer cache.Indexer
}

// NewMessagingAddressPlanLister returns a new MessagingAddressPlanLister.
func NewMessagingAddressPlanLister(indexer cache.Indexer) MessagingAddressPlanLister {
	return &messagingAddressPlanLister{indexer: indexer}
}

// List lists all MessagingAddressPlans in the indexer.
func (s *messagingAddressPlanLister) List(selector labels.Selector) (ret []*v1beta2.MessagingAddressPlan, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.MessagingAddressPlan))
	})
	return ret, err
}

// MessagingAddressPlans returns an object that can list and get MessagingAddressPlans.
func (s *messagingAddressPlanLister) MessagingAddressPlans(namespace string) MessagingAddressPlanNamespaceLister {
	return messagingAddressPlanNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// MessagingAddressPlanNamespaceLister helps list and get MessagingAddressPlans.
type MessagingAddressPlanNamespaceLister interface {
	// List lists all MessagingAddressPlans in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1beta2.MessagingAddressPlan, err error)
	// Get retrieves the MessagingAddressPlan from the indexer for a given namespace and name.
	Get(name string) (*v1beta2.MessagingAddressPlan, error)
	MessagingAddressPlanNamespaceListerExpansion
}

// messagingAddressPlanNamespaceLister implements the MessagingAddressPlanNamespaceLister
// interface.
type messagingAddressPlanNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all MessagingAddressPlans in the indexer for a given namespace.
func (s messagingAddressPlanNamespaceLister) List(selector labels.Selector) (ret []*v1beta2.MessagingAddressPlan, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.MessagingAddressPlan))
	})
	return ret, err
}

// Get retrieves the MessagingAddressPlan from the indexer for a given namespace and name.
func (s messagingAddressPlanNamespaceLister) Get(name string) (*v1beta2.MessagingAddressPlan, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta2.Resource("messagingaddressplan"), name)
	}
	return obj.(*v1beta2.MessagingAddressPlan), nil
}
