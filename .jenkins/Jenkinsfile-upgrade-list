#!/usr/bin/env groovy

def lib = evaluate readTrusted('.jenkins/jenkins-functions.groovy')

pipeline {
    options {
        timeout(time: 2, unit: 'HOURS')
        ansiColor('xterm')
    }
    environment {
        MAILING_LIST = credentials('MAILING_LIST')
        CORES_DIR = "/tmp/cores"
        ARTIFACTS_DIR = 'artifacts'
        ANSIBLE_FORCE_COLOR = true
        OPENSHIFT_PROJECT = "enmasse-infra"
    }
    agent {
        node {
            label "enmasse"
        }
    }
    stages {
        stage('run upgrade jobs') {
            steps {
                script {
                    for (def startVersion : params.UPGRADE_FROM.split(",")) {
                        println "Starting upgrade tests job from version "+startVersion
                        build(
                            job: params.UPGRADE_JOB_NAME,
                            wait: true,
                            parameters: [
                                [$class: 'StringParameterValue', name: 'BUILD_TAG', value: BUILD_TAG],
                                [$class: 'StringParameterValue', name: 'TEST_CASE', value: 'common.upgrade.**'],
                                [$class: 'StringParameterValue', name: 'START_VERSION', value: startVersion]
                            ]
                        )
                    }
                }
            }
        }
    }
    post {
        failure {
            script {
                lib.sendMail(env.MAILING_LIST, env.JOB_NAME, env.BUILD_URL)
            }
        }
    }
}
