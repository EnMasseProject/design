#!/usr/bin/env groovy

def lib = evaluate readTrusted('./jenkins-functions.groovy')

pipeline {
    agent {
        node {
            label 'enmasse-long'
        }
    }
    options {
        timeout(time: 12, unit: 'HOURS')
        ansiColor('xterm')
    }
    environment {
        CORES_DIR = "/tmp/cores"
        ARTIFACTS_DIR = 'artifacts'
    }
    stages {
        stage('wait for agent ready') {
            steps {
                script {
                    lib.waitUntilAgentReady()
                }
            }
        }
        stage('clean') {
            steps {
                cleanWs()
            }
        }
        stage('checkout') {
            steps {
                checkout scm
                sh 'rm -rf artifacts && mkdir -p artifacts'
            }
        }
        stage('start openshift') {
            steps {
                timeout(time: 10, unit: 'MINUTES') {
                    script {
                        lib.startOpenshift()
                    }
                }
            }
        }
        stage('system tests') {
            environment {
                JOB_NAME_SUB = "${String.format("%.15s", JOB_NAME)}"
                OPENSHIFT_PROJECT = "${JOB_NAME_SUB}${BUILD_NUMBER}"
            }
            steps {
                withCredentials([string(credentialsId: 'openshift-host', variable: 'OPENSHIFT_URL'), usernamePassword(credentialsId: 'openshift-credentials', passwordVariable: 'OPENSHIFT_PASSWD', usernameVariable: 'OPENSHIFT_USER')]) {
                    script {
                        sh 'make templates || true'
                        lib.runSystemtests(env.CORES_DIR, "latest", 'systemtests-marathon', '', false)
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                lib.postAction(env.CORES_DIR, env.ARTIFACTS_DIR)
            }
        }
        failure {
            echo "build failed"
        }
    }
}
