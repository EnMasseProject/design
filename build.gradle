allprojects  {
    group = 'io.enmasse'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.8'
    }
}


ext {
    dockerorg = 'lulf'
    commit = System.getenv("COMMIT") ?: "latest"
    version = System.getenv("VERSION") ?: "latest"

    slf4jVersion = '1.7.21'
    jacksonVersion = '2.7.4'
    junitVersion = '4.12'
    mockitoVersion = '2.0.52-beta'
    vertxVersion = '3.4.1'
    openshiftClientVersion = '2.3.1'
    resteasyVersion = '3.1.0.Final'
    artemisVersion = '2.0.0'
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(Tar){
        compression = Compression.GZIP
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "https://repository.jboss.org/nexus/content/repositories/snapshots/" }
    }

    apply plugin: 'com.bmuschko.docker-remote-api'

    docker {
        registryCredentials {
            username = System.getenv("DOCKER_USER")
            password = System.getenv("DOCKER_PASS")
        }
    }

    if (new File(projectDir, "Dockerfile").exists()) {
        task buildImage(type: com.bmuschko.gradle.docker.tasks.image.DockerBuildImage) {
            println "Executing buildimage for $projectDir"
            inputDir = projectDir
            tag = "${dockerorg}/${project.name}:${commit}"
        }

        task pushImage(type: com.bmuschko.gradle.docker.tasks.image.DockerPushImage) {
            tag = "${commit}"
            imageName = "${dockerorg}/${project.name}"
        }
    }
}
