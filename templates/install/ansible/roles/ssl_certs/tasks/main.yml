---
- name: Check if secret exists
  shell: oc get secret -n {{ namespace }} {{ cert_secret }}
  register: secret_exists
  failed_when: secret_exists.stderr != '' and 'NotFound' not in secret_exists.stderr
  changed_when: secret_exists.rc == 1

- name: Create temp folder for certificates
  when: secret_exists.changed
  register: cert_temp
  tempfile:
    state: directory
- name: Generate an OpenSSL CA private key
  when: secret_exists.changed
  shell: openssl genrsa -out "{{ cert_temp.path }}/ca.key" 2048
- name: Generate an OpenSSL CA cert
  when: secret_exists.changed
  shell: openssl req -new -x509 -days 720 -key "{{ cert_temp.path }}/ca.key" -subj "/O=io.enmasse/CN={{ cert_cn }}" -out "{{ cert_temp.path }}/ca.crt"
- name: Generate an OpenSSL CSR
  when: secret_exists.changed
  shell: openssl req -newkey rsa:2048 -nodes -keyout "{{ cert_temp.path }}/tls.key" -subj "/O=io.enmasse/CN={{ cert_cn }}" -out "{{ cert_temp.path }}/tls.csr"
- name: Generate an OpenSSL server cert
  when: secret_exists.changed
  shell: bash -c 'openssl x509 -req -extfile <(printf "subjectAltName={{ cert_sans }}") -days 720 -in "{{ cert_temp.path }}/tls.csr" -CA "{{ cert_temp.path }}/ca.crt" -CAkey "{{ cert_temp.path }}/ca.key" -CAcreateserial -out "{{ cert_temp.path }}/tls.crt"'
- name: Create a secret containing the certificate
  shell: oc create secret tls {{ cert_secret }} -n {{ namespace }} --cert="{{ cert_temp.path }}/tls.crt" --key="{{ cert_temp.path }}/tls.key"
  when: secret_exists.changed
